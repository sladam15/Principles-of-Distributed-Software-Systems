apply plugin: 'application'

repositories {
    mavenCentral()
}

dependencies {
   compile group: 'org.json', name: 'json', version: '20200518'
}

//define main class
mainClassName = 'Concentration'

task runServer(type: JavaExec) {
  group 'server'
  description 'Creates Server socket waits for messages'

  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.Server'
  standardInput = System.in
  
  // run with arguments e.g.: gradle runServer -Pport=9099 -q --console=plain
  if (project.hasProperty('port')) {
    args(project.getProperty('port'));
  }
}

task runTask1(type: JavaExec) {
  group 'server'
  description 'Creates Server socket waits for messages'

  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.Server'
  standardInput = System.in
  
  // run with arguments e.g.: gradle runTask1 -Pport=9099 -q --console=plain
  if (project.hasProperty('port')) {
    args(project.getProperty('port'));
  }
}

task runTask2(type: JavaExec) {
  group 'server'
  description 'Creates Server (multi-threaded) socket waits for messages'

  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.ThreadedServer'
  standardInput = System.in
  
  // run with arguments e.g.: gradle runTask2 -Pport=9099 -q --console=plain
  if (project.hasProperty('port')) {
    args(project.getProperty('port'));
  }
}

task runTask3(type: JavaExec) {
  group 'server'
  description 'Creates Server (bounded multi-threaded) socket waits for messages'

  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.ThreadPoolServer'
  standardInput = System.in
  
  // run with arguments e.g.: gradle runTask3 -Pport=9099 -q --console=plain
  if (project.hasProperty('port')) {
    args(project.getProperty('port'));
  }
}

task extraCredit(type: JavaExec) {
  group 'server'
  description 'Creates Server (multi-threaded w/ locks) socket waits for messages'

  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.ThreadedServerSolution2'
  standardInput = System.in
  
  // run with arguments e.g.: gradle extraCredit -Pport=9099 -q --console=plain
  if (project.hasProperty('port')) {
    args(project.getProperty('port'));
  }
}

task runClient(type: JavaExec) {
  group 'client'
  description 'Creates client socket sends a message to the server'

  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in

  main = 'taskone.Client'
  standardInput = System.in
  
  args 'localhost' // host
  args '9099' // port
  
}