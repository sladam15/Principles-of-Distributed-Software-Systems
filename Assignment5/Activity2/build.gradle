apply plugin: 'java'

description = "TCP Server & Client Exchange for Game"

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.json', name: 'json', version: '20200518'
}

//gradle TC -Pport=8000
//gradle TC
task TC(type: JavaExec) {
  group 'Server'
  description 'Starts a TCP Server to form with a Client connection'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Activity2.TC'
  
  args '8000' // port
  
  // run with arguments e.g.: gradle TC -Pport=8000
  if (project.hasProperty('port')) {
    args(project.getProperty('port'));
  }
}

//gradle Client -Pport=8000 -Phost='localhost'
//gradle Client
task Client(type: JavaExec) {
  group 'Client'
  description 'Starts a TCP Client Connection that can be connected with a Server'

  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in

  main = 'Activity2.Client'
  
  args 'localhost' // host
  args '8000' // port
  
  // run with arguments e.g.: gradle Client -Phost=localhost -Pport=8080
  if (project.hasProperty("host") && project.hasProperty('port')) {
    args(project.getProperty('host'), project.getProperty('port'));
  }
}
  
//gradle node1
task node1(type: JavaExec) {
  group 'Node1'
  description 'Starts a Node to be used by the Server'

  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in

  main = 'Activity2.Node1'
  
  args '8000' // port
}
  
//gradle node2
task node2(type: JavaExec) {
  group 'Node2'
  description 'Starts a second Node to be used by the Server'

  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in

  main = 'Activity2.Node2'
  
  args '8000' // port
}